<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net7.0-windows TFM, one for MacOS with net7.0-macos and one with net7.0 TFM for Linux.-->
    <Nullable>enable</Nullable>
    <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
  </PropertyGroup>

<PropertyGroup>
    <CFBundleName>DemoCenter.Desktop</CFBundleName> 
    <CFBundleDisplayName>DemoCenter.Desktop</CFBundleDisplayName>
    <CFBundleIdentifier>net.eremexcontrols</CFBundleIdentifier>
    <CFBundleVersion>1.0.0</CFBundleVersion>
    <CFBundlePackageType>APPL</CFBundlePackageType>
    <CFBundleSignature>????</CFBundleSignature>
    <CFBundleExecutable>DemoCenter.Desktop</CFBundleExecutable>
    <CFBundleIconFile>DemoCenter.Desktop.icns</CFBundleIconFile>
    <CFBundleShortVersionString>1.0.0</CFBundleShortVersionString>

    <NSPrincipalClass>NSApplication</NSPrincipalClass>
    <NSHighResolutionCapable>true</NSHighResolutionCapable>
</PropertyGroup>

  <PropertyGroup>
    <ApplicationManifest>app.manifest</ApplicationManifest>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Avalonia.Desktop"/>
    <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
    <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics"/>
    <PackageReference Include="Dotnet.Bundle"/>
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\DemoCenter\DemoCenter.csproj" />
  </ItemGroup>
</Project>
