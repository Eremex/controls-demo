<root>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EremexTabControlCanOrganizeTheContentsOfAB" xml:space="preserve">
    <value>Eremex Tab Control 可以将绑定项源的内容组织成选项卡式用户界面。它支持选项卡重新排序、多种选项卡布局模式以及用于添加和关闭选项卡的内置按钮。</value>
  </data>
  <data name="TheMxMessageBoxDialogAllowsYouToDisplayMes" xml:space="preserve">
    <value>MxMessageBox 对话框允许您向用户显示消息并提问。该对话框支持 Eremex 绘制主题，并且与项目中的其他 EMX 控件保持一致。使用右侧的可视元素自定义并显示示例消息框。</value>
  </data>
  <data name="SplitContainerControlAllowsYouToPlaceConte" xml:space="preserve">
    <value>Split Container Control 允许您将内容放置在两个面板上，并通过用户可拖动的分隔条来调整面板大小。启用面板折叠功能后，用户可以单击分隔条以折叠和恢复面板。</value>
  </data>
  <data name="TheDockManagerComponentAllowsYouToImplemen" xml:space="preserve">
    <value>Dock Manager 组件允许您实现流行 IDE 中的经典停靠用户界面。您可以创建支持停靠、自动隐藏和浮动操作的工具面板。特殊的文档容器设计用于显示窗口的主要内容。您可以创建多个文档并将其组织成选项卡式用户界面。</value>
  </data>
  <data name="TheToolbarManagerComponentAllowsYouToImple" xml:space="preserve">
    <value>ToolbarManager 组件允许您实现经典的工具栏和菜单用户界面。您不仅可以将工具栏停靠在窗口边缘，还可以停靠在任何指定位置。用户可以使用拖放操作自定义工具栏布局。他们还可以显示自定义窗口以访问所有（隐藏和可见的）工具栏项，并使用拖放操作移动这些项。</value>
  </data>
  <data name="TheToolbarsMenuLibraryContainsAPopupMenuCo" xml:space="preserve">
    <value>工具栏和菜单库包含一个 PopupMenu 组件，您可以使用它将上下文菜单附加到任何控件。Eremex 上下文菜单样式设置与所有工具栏库组件一致。</value>
  </data>
  <data name="TheChartControlSupportsInstantDisplayOfRap" xml:space="preserve">
    <value>Chart Control 支持即时显示快速变化的实时数据。此示例展示了如何使用特殊的数据适配器实现移动视口。</value>
  </data>
  <data name="TheChartControlSGraphicsRenderingIsOptimiz" xml:space="preserve">
    <value>Chart Control 的图形渲染经过优化，可以显示大量数据。即使系列包含数百万个点，控件仍能提供高性能。</value>
  </data>
  <data name="ThisExampleDemonstratesACartesianChartCont" xml:space="preserve">
    <value>此示例展示了一个具有多个数据系列和轴的 CartesianChart 控件。您可以使用鼠标滚动和缩放整个图表区域或单个轴。使用选项面板更改主轴设置。</value>
  </data>
  <data name="ChartControlSupportsLogarithmicScalesForAn" xml:space="preserve">
    <value>Chart Control 支持对其任何数值轴使用对数刻度。默认情况下使用以 10 为底的对数。您可以指定自定义对数底数以更改数据缩放比例。</value>
  </data>
  <data name="ThisDemoShowsConstantLinesAndStripsUsedToH" xml:space="preserve">
    <value>此演示展示了用于在 CartesianChart 控件中突出显示特定值和值范围的常量和带状区域。右键单击图表以创建 X 轴的自定义常量线。</value>
  </data>
  <data name="ThisExampleDemonstratesThePointSeriesViewW" xml:space="preserve">
    <value>此示例展示了点系列视图，它允许您绘制单个点。</value>
  </data>
  <data name="TheLineSeriesViewShownInThisExampleAllowsY" xml:space="preserve">
    <value>此示例中展示的线系列视图允许您通过连接点来绘制图表。</value>
  </data>
  <data name="TheAreaSeriesViewAllowsYouDisplayFilledAre" xml:space="preserve">
    <value>区域系列视图允许您显示填充区域。当您需要直观地比较两个或多个数据系列时，此视图非常有用。</value>
  </data>
  <data name="TheScatterLineSeriesViewIsUsefulWhenYouNee" xml:space="preserve">
    <value>散点线系列视图在您需要按数据系列中出现的顺序连接点时非常有用。</value>
  </data>
  <data name="ThisExampleDemonstratesTheStepLineSeriesVi" xml:space="preserve">
    <value>此示例展示了阶梯线系列视图，它通过水平和垂直线段连接点。</value>
  </data>
  <data name="TheStepAreaSeriesViewConnectsPointsWithHor" xml:space="preserve">
    <value>阶梯区域系列视图通过水平和垂直线段连接点，并使用指定颜色填充线与 X 轴之间的区域。</value>
  </data>
  <data name="ADataSeriesInThisExampleContainsTwoYValues" xml:space="preserve">
    <value>此示例中的数据系列包含每个数据点的两个 Y 值。范围区域视图填充这些 Y 值之间的区域。</value>
  </data>
  <data name="ThisExampleDemonstratesTheSideBySideBarSer" xml:space="preserve">
    <value>此示例展示了并排条形系列视图，它将数据可视化为一组矩形条。</value>
  </data>
  <data name="ADataSeriesInThisExampleContainsTwoYValues1" xml:space="preserve">
    <value>此示例中的数据系列包含每个数据点的两个 Y 值。并排范围条形视图在这些 Y 值之间绘制矩形条。</value>
  </data>
  <data name="TheCandlestickSeriesViewAllowsYouToCreateA" xml:space="preserve">
    <value>蜡烛图系列视图允许您创建描述资产价格变动的金融图表。对于每个时间段，图表显示包含开盘价、收盘价、最高价和最低价的数据集。

股票数据：https://www.investing.com/</value>
  </data>
  <data name="InThisDemoTheCandlestickSeriesViewUsesASpe" xml:space="preserve">
    <value>在此演示中，蜡烛图系列视图使用特殊的数据适配器（SummaryCandlestickDataAdapter），它接受原始价格数据并从中构建蜡烛图。
原始价格是资产在特定时间点的单个价格值。数据适配器根据指定的时间单位将原始价格聚合为蜡烛图。
例如，数据可以聚合为 1 秒、1 分钟、1 小时、1 天、1 周等，或聚合为选定时间单位的倍数，例如 5 秒、15 分钟、2 天等。</value>
  </data>
  <data name="TheDataGridSGroupingFeatureMakesItEasyToSu" xml:space="preserve">
    <value>Data Grid 的分组功能使用户可以轻松汇总信息。他们可以通过将列拖到分组面板上来按无限数量的列对数据进行分组。</value>
  </data>
  <data name="YouCanEmbedAnyControlInDataGridCellsToPres" xml:space="preserve">
    <value>您可以在 Data Grid 单元格中嵌入任何控件，以按您希望的方式呈现和编辑单元格数据。此演示展示了 Eremex 的内置编辑器：DateEditor、SpinEditor 和 ComboBoxEditor。当您在单元格中使用 Eremex 编辑器时，Data Grid 的性能会显著提高，尤其是在处理大型数据源时。</value>
  </data>
  <data name="TheDataValidationMechanismAllowsYouToCheck" xml:space="preserve">
    <value>数据验证机制允许您检查单元格值并显示包含无效数据的单元格中的错误。您可以使用 DataAnnotation 属性和 IDataErrorInfo/INotifyDataErrorInfo 接口在 ItemsSource 级别验证数据。在此演示中切换“显示 ItemsSource 错误”复选框以查看来自 DataAnnotation 属性的数据验证错误。Data Grid 还允许您使用 ValidateCellValue 事件来实现自定义规则以验证用户输入。</value>
  </data>
  <data name="DataGridSupportsBuiltInDataSearchAndFiltra" xml:space="preserve">
    <value>Data Grid 支持内置的数据搜索和过滤功能。搜索面板允许您定位并突出显示包含特定文本的行单元格。您可以使搜索面板始终可见，或使用 Ctrl+F 键盘快捷键激活它。自动过滤行（显示在所有数据行上方）用于根据各个列过滤数据。在代码中，您可以自定义自动过滤行中用于各个列的过滤条件。</value>
  </data>
  <data name="RegardlessOfTheNumberOfColumnsAndRowsInThe" xml:space="preserve">
    <value>无论控件中有多少列和行，Data Grid 在水平或垂直滚动或排序/分组数据时仍能保持响应。内置的数据虚拟化机制仅更新视口内的单元格，以保持高性能滚动。</value>
  </data>
  <data name="DataGridAdaptsRowHeightToFitCellContentsTe" xml:space="preserve">
    <value>Data Grid 会调整行高以适应单元格内容。文本列可以以单行或多行显示数据。为列分配 TextEditor 内置编辑器（或其派生类），并启用文本换行以多行显示文本。</value>
  </data>
  <data name="InThisDemoDataGridEmulatesTheWindowsTaskMa" xml:space="preserve">
    <value>在此演示中，Data Grid 通过显示频繁更新的模拟进程来模拟 Windows 任务管理器。如果绑定项源实现了 INotifyPropertyChanged 接口，Data Grid 支持自动数据更新。在此示例中，使用 ObservableObject 类（实现 INotifyPropertyChanged 接口）和 CommunityToolkit.Mvvm 库中定义的 ObservableProperty 属性支持对基础业务对象的更改通知。</value>
  </data>
  <data name="DataGridSupportsMultipleRowSelectionModeWh" xml:space="preserve">
    <value>DataGrid 支持多行选择模式，允许您和用户一次选择（突出显示）多行。用户可以使用鼠标和键盘选择多行。按住 CTRL 和/或 SHIFT 键单击行以选择行。</value>
  </data>
  <data name="DataGridSupportsDragAndDropOperationsWithi" xml:space="preserve">
    <value>Data Grid 支持在控件内部和外部控件（例如 Tree List 或另一个 Data Grid）之间进行拖放操作。此示例展示了在 Data Grid 内部和之间的拖放功能。AllowDragDrop 选项激活拖放功能。{0}必须启用 AllowDragDropSortedRows 选项以允许对已排序/分组的 Data Grid 进行拖放操作。当数据已排序或分组时，拖放操作会修改拖动行在排序列中的值。{1}在此示例中，控件绑定到包含相同业务对象的集合。这确保了在从源网格到目标网格的拖放操作期间自动移动行。当您将一行从一个网格移动到另一个网格时，相应的项会在两个网格控件的项源之间移动。</value>
  </data>
  <data name="TheEremexControlsLibraryIncludesMultipleEd" xml:space="preserve">
    <value>Eremex 控件库包括多个编辑器，为您提供高级数据编辑功能。这些编辑器允许您显示和编辑不同数据类型（数字、布尔值、日期时间、枚举等）的数据。它们支持数据验证机制、样式设置以及嵌入到容器控件（Data Grid、Tree List、Property Grid 和工具栏/菜单）中。</value>
  </data>
  <data name="TheEditorsLibraryIncludesTheTextEditorAndB" xml:space="preserve">
    <value>编辑器库包括 Text Editor 和 Button Editor 控件，它们提供基本的文本编辑功能：数据验证、水印（编辑器为空时显示的提示）以及控制文本选择和数据编辑操作的多个选项。Button Editor 支持无限数量的内置常规按钮和复选框按钮，它们可以在编辑框的左侧或右侧显示文本或图像。</value>
  </data>
  <data name="TheSpinEditorIsANumericValueEditorWithBuil" xml:space="preserve">
    <value>Spin Editor 是一个数值编辑器，带有用于按特定值（增量）增加和减少数字的内置旋转按钮。用户可以通过单击这些按钮或按键盘上的上下箭头来增加和减少数字。SpinEditor 使用数字掩码将用户输入限制为仅数字值，并根据指定的模式格式化编辑值。</value>
  </data>
  <data name="TheComboBoxEditorFeaturesADropdownListOfIt" xml:space="preserve">
    <value>ComboBox Editor 具有一个下拉列表，用户可以从列表中选择一个或多个项目。编辑器可以显示字符串列表、业务对象列表或枚举值。在多选模式下，项目复选框允许用户一次选择多个项目。</value>
  </data>
  <data name="YouCanUseTheSegmentedEditorToPresentASetOf" xml:space="preserve">
    <value>您可以使用 Segmented Editor 将一组选项呈现为水平排列的段。用户可以单击其中一个段以选择相应的选项，或按住 CTRL 键单击选定的段以清除选择。编辑器允许您从字符串列表、业务对象列表或枚举类型填充段。</value>
  </data>
  <data name="TheDateEditorFeaturesADropdownCalendarThat" xml:space="preserve">
    <value>Date Editor 具有一个下拉日历，允许用户选择日期。日历的导航栏使用户可以浏览月份和年份。DateEditor 使用日期时间掩码将用户输入限制为仅日期时间值，并根据指定的模式格式化编辑值。</value>
  </data>
  <data name="TheColorEditorAndPopupColorEditorControlsA" xml:space="preserve">
    <value>Color Editor 和 Popup Color Editor 控件允许用户选择颜色。这些控件支持三种调色板：默认（可在代码中自定义）、标准（固定颜色）和自定义（用户可自定义）。内置的颜色选择器帮助用户从颜色空间添加自定义颜色，或以 RGB 和 HSB 格式指定颜色值。</value>
  </data>
  <data name="TheHyperlinkEditorDisplaysItsContentAsAHyp" xml:space="preserve">
    <value>Hyperlink Editor 将其内容显示为超链接。编辑器支持手动（默认）和自动超链接处理。专用命令或事件允许您手动处理超链接点击。启用自动超链接导航以允许编辑器在点击时自动执行链接。</value>
  </data>
  <data name="YouCanCreateComboBoxAndSegmentedEditorsIte" xml:space="preserve">
    <value>您可以从枚举类型值创建 ComboBox 和 Segmented Editors 的项目。应用于枚举值的专用 Data Annotation 属性允许您使用图像、显示文本和工具提示填充控件的项目。</value>
  </data>
  <data name="UseMemoEditorToDisplayAndEditLargeTextInAP" xml:space="preserve">
    <value>使用 MemoEditor 在弹出窗口中显示和编辑大文本，无论是否启用文本换行。IsTextEditable 属性允许您防止在编辑框中编辑文本。当该属性为 false 时，编辑框可以显示一个特殊图标，指示弹出窗口中存在文本。</value>
  </data>
  <data name="Graphics3DControlAllowsYouToVisualizeAndIn" xml:space="preserve">
    <value>Graphics3DControl 允许您可视化和与 3D 模型交互。使用右侧的属性窗格自定义控件的基本渲染和行为设置。</value>
  </data>
  <data name="ThisExampleDemonstratesAGraphics3DControlT" xml:space="preserve">
    <value>此示例展示了一个使用线条渲染 3D 模型的 Graphics3DControl。</value>
  </data>
  <data name="ThisExampleDemonstratesAGraphics3DControlT1" xml:space="preserve">
    <value>此示例展示了一个使用点渲染 3D 模型的 Graphics3DControl。</value>
  </data>
  <data name="ThisExampleDemonstratesDynamicTransformati" xml:space="preserve">
    <value>此示例展示了应用于 Graphics3DControl 中 3D 模型的动态变换。</value>
  </data>
  <data name="ThisExampleDemonstratesAGraphics3DControlD" xml:space="preserve">
    <value>此示例展示了一个 Graphics3DControl，它显示从 STL 文件加载的大型 3D 模型。使用 STLDotNet6.Formats.StereoLithography 库解析 STL 文件，并获取数据以初始化创建的模型的顶点和材质。</value>
  </data>
  <data name="ThisExampleDemonstratesAGraphics3DControlD1" xml:space="preserve">
    <value>此示例展示了一个显示具有简单材质的 3D 模型的 Graphics3DControl。使用右侧的属性窗格自定义材质设置。</value>
  </data>
  <data name="InThisExampleAGraphics3DControlDisplaysA3D" xml:space="preserve">
    <value>在此示例中，Graphics3DControl 显示具有纹理材质的 3D 模型。使用右侧的材质窗格选择纹理。</value>
  </data>
  <data name="ThisExampleDemonstratesTheIsometricAndPers" xml:space="preserve">
    <value>此示例展示了 Graphics3DControl 支持的等距和透视相机。使用右侧的相机窗格选择相机模式和预定义的相机视图之一。</value>
  </data>

  <data name="AHeatmapRendersA2DimensionalArrayOfValuesA" xml:space="preserve">
    <value>热力图将二维数组的值渲染为颜色编码的矩阵。每个数据点的颜色对应于数据点的值。此示例展示了热力图控件，它允许您从数据创建热力图。单击右侧的颜色渐变以将此颜色编码应用于热力图。

图片来源：韦伯太空望远镜，https://webbtelescope.org/</value>
  </data>
  <data name="InThisExampleTheHeatmapControlUsesCustomCo" xml:space="preserve">
    <value>在此示例中，热力图控件使用自定义颜色编码来实时可视化样本信号的强度变化。顶部的图表控件显示此信号的振幅。控件在底层数据变化时通过计时器无缝更新。</value>
  </data>
  <data name="InAPolarChartEachDataPointIsDeterminedByAn" xml:space="preserve">
    <value>在极坐标图中，每个数据点由角度和距离确定。此示例展示了用于突出显示特定值和值范围的常量和带状区域。角度范围和距离范围在此演示的代码中设置。在图表内左键单击以创建角度的自定义常量线。右键单击以创建距离的自定义常量线。</value>
  </data>
  <data name="ThisExampleDemonstratesThePointSeriesViewW1" xml:space="preserve">
    <value>此示例展示了点系列视图，它允许您绘制单个点。</value>
  </data>
  <data name="TheLineSeriesViewShownInThisExampleAllowsY1" xml:space="preserve">
    <value>此示例中展示的线系列视图允许您通过连接点来绘制图表。</value>
  </data>
  <data name="TheAreaSeriesViewAllowsYouDisplayFilledAre1" xml:space="preserve">
    <value>区域系列视图允许您显示图表与零点之间的填充区域。当您需要直观地比较两个或多个数据系列时，此视图非常有用。</value>
  </data>
  <data name="TheScatterLineSeriesViewIsUsefulWhenYouNee1" xml:space="preserve">
    <value>散点线系列视图在您需要按数据系列中出现的顺序连接点时非常有用。</value>
  </data>
  <data name="ADataSeriesInThisExampleContainsTwoYValues2" xml:space="preserve">
    <value>此示例中的数据系列包含每个数据点的两个 Y 值。范围区域视图填充这些 Y 值之间的区域。</value>
  </data>
  <data name="PropertyGridAutomaticallyDetectsTheTypeOfB" xml:space="preserve">
    <value>属性网格自动检测绑定字段的类型，并使用适当的 Eremex 数据编辑器来显示和编辑单元格值。您可以显式地为特定字段分配编辑器，以覆盖默认行为并自定义编辑器设置。</value>
  </data>
  <data name="PropertyGridTabRowsAllowYouToGroupASetOfFi" xml:space="preserve">
    <value>属性网格的选项卡行允许您将一组字段分组到选项卡式用户界面中。每行中的选项卡项显示其自己的一组绑定字段。</value>
  </data>
  <data name="RibbonControlAllowsYouToIntegrateMicrosoft" xml:space="preserve">
    <value>RibbonControl 允许您将受 Microsoft Office 启发的导航菜单集成到您的 Avalonia UI 应用程序中。该控件提供两种视图：经典视图（三行项目）和简化视图（一行项目）。控件右下角的下拉按钮打开一个选择器以在这些视图之间切换。{0}RibbonControl 支持多种项目类型：大按钮和小按钮、复选框按钮、子菜单、内置编辑器、内联和下拉画廊、按钮组等。您可以根据需要创建任意数量的页面，并将项目放置在快速访问工具栏或选项卡标题区域。{1}按下 ALT 键以聚焦到功能区，然后使用键盘在功能区元素之间导航并激活命令。</value>
  </data>
  <data name="ThisExampleDemonstratesThePointSeriesViewW2" xml:space="preserve">
    <value>此示例展示了点系列视图，它允许您在史密斯图上绘制单个点。</value>
  </data>
  <data name="TheScatterLineSeriesViewIsUsefulWhenYouNee2" xml:space="preserve">
    <value>散点线系列视图在您需要按数据系列中出现的顺序连接点时非常有用。</value>
  </data>
  <data name="TheTreeListSAutoFilterRowDisplayedAtTheTop" xml:space="preserve">
    <value>树列表的自动过滤行显示在控件的顶部，允许您快速查找包含特定值的行。在一个或多个列的自动过滤行中开始输入以过滤数据。搜索面板是另一种在树列表中定位信息的方式。按下 CTRL+F 激活搜索面板，然后输入文本以搜索控件的数据。</value>
  </data>
  <data name="EremexEditorsAreUsedInTreeListCellsByDefau" xml:space="preserve">
    <value>默认情况下，Eremex 编辑器用于树列表单元格中以显示和编辑常见数据类型（布尔值、整数、枚举等）的单元格值。此演示展示了隐式分配的内置编辑器，并演示了如何显式指定树列表列的编辑器。</value>
  </data>
  <data name="YouCanBindTreeListToAHierarchicalDataSourc" xml:space="preserve">
    <value>您可以将树列表绑定到分层数据源，该数据源通过集合属性或特殊数据选择器返回子数据。此演示展示了如何创建一个选择器，以提供磁盘上文件夹的分层结构。</value>
  </data>
  <data name="TheTreeListAndTreeViewControlsSupportMulti" xml:space="preserve">
    <value>树列表和树视图控件支持多节点选择模式，允许您和用户一次选择（突出显示）多个节点。用户可以使用鼠标和键盘选择多个节点。按住 CTRL 和/或 SHIFT 键单击节点以选择节点。</value>
  </data>
  <data name="WASMOnlyText1" xml:space="preserve">
    <value>此演示仅适用于桌面模式。下载应用程序。</value>
  </data>
  <data name="WASMOnlyText2" xml:space="preserve">
    <value>解决方案并运行 DemoCenter.Desktop 项目以查看此演示。</value>
  </data>
</root>